load_module modules/ngx_http_opentracing_module.so;

worker_processes  2;

events {
  use           epoll;
  worker_connections  128;
}

error_log         /var/log/nginx/error.log info;

# Datadog env vars
env DD_AGENT_HOST;
env DD_TRACE_AGENT_PORT;
env DD_ENV;
env DD_TRACE_ANALYTICS_ENABLED;

http {
  opentracing on;
  opentracing_tag http_user_agent $http_user_agent;
  opentracing_trace_locations on;

  opentracing_load_tracer /usr/local/lib/libdd_opentracing_plugin.so /etc/dd-config.json;

  include       mime.types;
  charset       utf-8;
  
  # https://docs.datadoghq.com/tracing/connect_logs_and_traces/
  # create a trace log format for injecting the trace id into the logs
  log_format trace '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    'trace_id=$opentracing_context_x_datadog_trace_id '
                    ;

  access_log    /var/log/nginx/access.log trace;

  server {
    listen *:80;
    server_name localhost;

    root /www/data;

    location /images/ {
      opentracing_operation_name "$request_method $uri";
      opentracing_tag "resource.name" "/";
      opentracing_propagate_context;
      autoindex on;
    }
  }
}
